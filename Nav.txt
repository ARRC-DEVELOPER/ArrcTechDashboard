import React, { useState } from 'react';
import { FaHamburger, FaTruck, FaMoneyBill, FaSyncAlt, FaUtensils, FaCheckCircle, FaBars, FaEdit } from 'react-icons/fa';

const Navrow = () => {
    const [selectedTab, setSelectedTab] = useState('dineIn');
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [isCustomerModalOpen, setIsCustomerModalOpen] = useState(false);

    const handleTabClick = (tab) => {
        setSelectedTab(tab);
        if (tab === 'orders') {
            setIsModalOpen(true);
        }
    };

    const handleCustomerEditClick = () => {
        setIsCustomerModalOpen(true);
    };

    const renderDynamicContent = () => {
        if (selectedTab === 'dineIn') {
            return (
                <div className="mt-4">
                    <div className="flex items-center space-x-2">
                        <span># Dine In</span>
                        <FaEdit className="cursor-pointer" />
                        <span>Default Customer</span>
                        <FaEdit className="cursor-pointer" onClick={handleCustomerEditClick} />
                        <span>Select Table</span>
                        <FaEdit className="cursor-pointer" />
                        <span>Select Guest</span>
                        <FaEdit className="cursor-pointer" />
                    </div>
                </div>
            );
        } else if (selectedTab === 'pickUp') {
            return (
                <div className="mt-4">
                    <div className="flex items-center space-x-2">
                        <span># Pick Up</span>
                        <FaEdit className="cursor-pointer" />
                        <span>Default Customer</span>
                        <FaEdit className="cursor-pointer" onClick={handleCustomerEditClick} />
                        <span>Select Waiter</span>
                        <FaEdit className="cursor-pointer" />
                    </div>
                </div>
            );
        } else if (selectedTab === 'delivery') {
            return (
                <div className="mt-4">
                    <div className="flex items-center space-x-2">
                        <span># Delivery</span>
                        <FaEdit className="cursor-pointer" />
                        <span>Default Customer</span>
                        <FaEdit className="cursor-pointer" onClick={handleCustomerEditClick} />
                        <span>Select Driver</span>
                        <FaEdit className="cursor-pointer" />
                    </div>
                </div>
            );
        }
        return null;
    };

    return (
        <div className="flex flex-col p-2 bg-gray-100 dark:bg-gray-800">
            {/* Nav Items with Icons */}
            <div className="flex space-x-4 text-gray-700 dark:text-gray-300">
                <button className="flex items-center hover:text-gray-900 dark:hover:text-white" onClick={() => handleTabClick('dineIn')}>
                    <FaHamburger className="mr-2" /> Dine In
                </button>
                <button className="flex items-center hover:text-gray-900 dark:hover:text-white" onClick={() => handleTabClick('pickUp')}>
                    <FaTruck className="mr-2" /> Pick Up
                </button>
                <button className="flex items-center hover:text-gray-900 dark:hover:text-white" onClick={() => handleTabClick('delivery')}>
                    <FaMoneyBill className="mr-2" /> Delivery
                </button>
                <button className="flex items-center hover:text-gray-900 dark:hover:text-white" onClick={() => handleTabClick('orders')}>
                    <FaBars className="mr-2" /> Orders
                </button>
            </div>

            {renderDynamicContent()}

            {/* Modal for Orders */}
            {isModalOpen && (
                <div className="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50">
                    <div className="bg-white p-4 rounded shadow-lg max-w-lg overflow-y-auto h-96">
                        <h2 className="text-lg font-bold">Running Orders</h2>
                        <div className="mt-4 space-y-4">
                            {/* Display order details */}
                            {[
                                { orderNo: 2248, time: '9:51 pm', type: 'Pick Up', amount: '$14.62' },
                                { orderNo: 2252, time: '12:38 am', type: 'Dine In', amount: '$12.90', table: 'T15', guest: 1 },
                                { orderNo: 2253, time: '4:23 pm', type: 'Pick Up', amount: '$22.83' },
                                { orderNo: 2254, time: '11:17 pm', type: 'Dine In', amount: '$9.25', table: 'T20', guest: 1 },
                                { orderNo: 2255, time: '1:24 pm', type: 'Dine In', amount: '$2.52', table: 'T19', guest: 1 },
                                { orderNo: 2257, time: '12:19 am', type: 'Delivery', amount: '$14.78' },
                                { orderNo: 2258, time: '12:19 am', type: 'Delivery', amount: '$31.07' },
                                { orderNo: 2269, time: '6:35 pm', type: 'Pick Up', amount: '$22.88' },
                                { orderNo: 2275, time: '9:54 pm', type: 'Dine In', amount: '$13.65', table: 'T17', guest: 1 },
                                { orderNo: 2276, time: '12:26 am', type: 'Dine In', amount: '$44.03', table: 'T22', guest: 4 },
                            ].map((order, index) => (
                                <div key={index} className="border p-2 rounded">
                                    <p>Order No. {order.orderNo}</p>
                                    <p>{order.time}</p>
                                    {order.table && <p>Table {order.table}</p>}
                                    {order.guest && <p>Guest {order.guest}</p>}
                                    <p>{order.amount}</p>
                                    <p>{order.type}</p>
                                </div>
                            ))}
                        </div>
                        <button className="mt-4 px-4 py-2 bg-blue-500 text-white rounded" onClick={() => setIsModalOpen(false)}>Close</button>
                    </div>
                </div>
            )}

            {/* Modal for Customer Edit */}
            {isCustomerModalOpen && (
                <div className="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50">
                    <div className="bg-white p-6 rounded shadow-lg max-w-lg">
                        <h2 className="text-lg font-bold mb-4">Customer</h2>
                        <form>
                            <div className="mb-4">
                                <label className="block text-gray-700">Search</label>
                                <input
                                    type="text"
                                    placeholder="Search Customer"
                                    className="w-full px-3 py-2 border rounded"
                                />
                            </div>
                            <div className="mb-4">
                                <label className="block text-gray-700">Customer Name *</label>
                                <input
                                    type="text"
                                    placeholder="Enter Customer Name"
                                    className="w-full px-3 py-2 border rounded"
                                />
                            </div>
                            <div className="mb-4">
                                <label className="block text-gray-700">Email</label>
                                <input
                                    type="email"
                                    placeholder="Enter Email"
                                    className="w-full px-3 py-2 border rounded"
                                />
                            </div>
                            <div className="mb-4">
                                <label className="block text-gray-700">Phone Number *</label>
                                <input
                                    type="tel"
                                    placeholder="Enter Phone Number"
                                    className="w-full px-3 py-2 border rounded"
                                />
                            </div>
                            <div className="mb-4">
                                <label className="block text-gray-700">Address</label>
                                <input
                                    type="text"
                                    placeholder="Enter Address"
                                    className="w-full px-3 py-2 border rounded"
                                />
                            </div>
                            <div className="flex justify-end space-x-4">
                                <button type="button" className="px-4 py-2 bg-gray-300 rounded" onClick={() => setIsCustomerModalOpen(false)}>Cancel</button>
                                <button type="submit" className="px-4 py-2 bg-blue-500 text-white rounded">Save</button>
                            </div>
                        </form>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Navrow;
